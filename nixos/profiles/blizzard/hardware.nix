# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
    imports =[ 
        (modulesPath + "/installer/scan/not-detected.nix")
    ];

    boot = {
        initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
        initrd.kernelModules = [ ];
        kernelModules = [ "kvm-amd" "88x2bu" ];
        extraModulePackages = [ config.boot.kernelPackages.rtl88x2bu ];

        # Use the systemd-boot EFI boot loader.
        loader.systemd-boot.enable = true;
        loader.efi.canTouchEfiVariables = true;
        loader.grub = {
            enable = false;
            device = "nodev";
        };
    };

    fileSystems."/" ={  
        device = "/dev/disk/by-label/NIXROOT";
        fsType = "ext4";
    };

    fileSystems."/boot" = { 
        device = "/dev/disk/by-label/NIXBOOT";
        fsType = "vfat";
    };

    fileSystems."/home" = { 
        device = "/dev/disk/by-label/NIXHOME";
        fsType = "ext4";
    };

    #fileSystems."/media/games" ={ 
    #    device = "/dev/disk/by-uuid/1702dd2e-49ed-4b13-afe9-37d9fe0783ee";
    #    fsType = "ext4";
    #};

    swapDevices = [ ];

    # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
    # (the default) this is the recommended approach. When using systemd-networkd it's
    # still possible to use this option, but it's recommended to use it in conjunction
    # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
    networking.useDHCP = lib.mkDefault true;
    # networking.interfaces.enp42s0.useDHCP = lib.mkDefault true;

    nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
    hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
