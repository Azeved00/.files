(include "stats.yuck")

; ============ BAR DEFs ================
(defwindow bar
    :monitor 0
    :windowtype "dock"
    :geometry (geometry :x "0%"
                        :y "0%"
                        :width "90%"
                        :height "10px"
                        :anchor "top center")
    :reserve (struts :side "top" :distance "4%")
    (bar))

(defwidget bar []
    (centerbox :orientation "h"
        (workspaces)
        (box :class "time" time)
        (sidestuff)))

; ========= WIDGETS DEFs =============
(defwidget sidestuff []
    (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
        (volume)
        (metric :icon ""
                :value  red-light
                :class "redl"
                :onchange "")
        (cpu)
        (ram)
        (wifi)))

(defwidget workspaces []
    (box :class "workspaces"
           :orientation "h"
        :space-evenly true
        :halign "start"
        :spacing 10
        (button :onclick "wmctrl -s 0" 1)
        (button :onclick "wmctrl -s 1" 2)
        (button :onclick "wmctrl -s 2" 3)
        (button :onclick "wmctrl -s 3" 4)
        (button :onclick "wmctrl -s 4" 5)
        (button :onclick "wmctrl -s 5" 6)
        (button :onclick "wmctrl -s 6" 7)
        (button :onclick "wmctrl -s 7" 8)
        (button :onclick "wmctrl -s 8" 9)))



