#shannannigans
nvim_cd()
{
    if [ -d "${1}" ]; then
        local dir="${1}"
        shift 1
        ( cd "${dir}" && nvim "${@}" )
    else
	\nvim "${@}"
    fi
}

# Create a new directory and enter it
function mk() {
    mkdir -p "$@" && cd "$@"
}

# Open man page as PDF
function manpdf() {
   man -t "${1}" | open -f -a /Applications/Preview.app/
}

# Initiate a project
function initProject() {
    local folder="$@"

    if ! [[ -n "$folder" ]]; then
        echo "Please provide a folder name"
        return
    fi
    
    echo "Creating the folder and adding basic structure"
    mk "$folder"
    mkdir src
    mkdir assets
    touch README.md
    touch .gitignore

    echo "Initiating Git repo"
    git init
    git add README.md
    git add .gitignore
    git commit -m "Initial Commit"


    read -p "Enter the git remote: " remote

    if [[ -n $remote ]]; then
        echo "Setting remote to '$remote'"
        git remote set-url origin "$remote"
    else
        echo "No remote provided. Use the following command to add a remote:"
        echo "git remote add origin <remote-url>"
    fi
}

function getOS() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        if command -v apt-get >/dev/null 2>&1; then
            echo "Debian-based"
        elif command -v pacman >/dev/null 2>&1; then
            echo "Arch-based"
        elif [ -f "/etc/NIXOS" ]; then
            echo "NixOS"
        else
            echo "Unknown Linux distribution"
        fi
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        echo "Mac OS"
    elif [[ "$OSTYPE" == "cygwin" ]]; then
        echo "Cygwin"
    elif [[ "$OSTYPE" == "msys" ]]; then
        echo "Windows (MSYS)"
    elif [[ "$OSTYPE" == "win32" ]]; then
        echo "Windows"
    else
        echo "Unknown"
    fi
}

function update(){
    local OS=$(getOS)
    echo "$OS"
    case $OS in
        "Debian-based")
            sudo apt update && sudo apt upgrade
            ;;
        "Arch-based")
            echo "Running Arch-based command"
            sudo pacman -Syu
            ;;
        "NixOS")
            echo "Running NixOS command"
            sudo nixos-rebuild switch
            ;;
        *)
            echo "There is no update command for this os"
            ;;
    esac
}
